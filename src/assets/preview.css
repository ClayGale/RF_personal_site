/* properties related only to the preview component are here */

/* project page styling */
#projects {
    display: grid;
    grid-auto-flow: column;
    gap: 10px;
    padding: 10px 10px 0 10px;
    border-bottom: 3px solid var(--myCream);
}

.project {
    display: grid;
    min-width: 400px;
    width:400px;
    transition: var(--quickTransition);
    background: linear-gradient( white, white 50%, var(--myCream) 50%, var(--myCream) );
    background-size: 100% 200%;
    transition-property: box-shadow, background-position, width;
    align-content: space-between;
}

    .project * {
        transition: var(--quickTransition);
        margin: 0.5rem;
        transition-property: transform;
    }

    .project p {
        font-family: var(--bodyFont);
        font-size: 14pt;
    }
    .project .skillsElement {
        overflow: hidden;
    }

    .project:hover {
        box-shadow: 0px 0px 2px 1px var(--myGoldenYellow);
        background-position: 100% 100%;
        transition: var(--quickTransition);
        transition-property: box-shadow, background-position, width;
        width: fit-content;
        max-width: 750px;
        z-index: 1;
    }

        .project:hover * {
            transform: translateY(-3px);
            transition: var(--quickTransition);
            transition-property: transform;
        }

        .project:hover .skillsElement {
            overflow: unset;
        }

/* education page styling */
#education {
    display: grid;
    grid-auto-flow: column;
    grid-template-areas:
        "one"
        "one"
        "one";
    gap: 10px;
    padding: 20px;
}

.schoolClass { /* inset is here for transitions and is not active until hovered */
    inset: 30% 40% auto 40%;
}

    .schoolClass > * {
        margin: 0.5em;
    }

    .schoolClass > h1 {
        display: inline;
        white-space: nowrap;
    }

    .schoolClass > p {
        text-align: center;
        font-family: var(--bodyFont);
        font-size: 0;
        float: left;
    }

.subtitleAbbreviated {
    display: inline;
    white-space: nowrap;
    font-size: 12pt;
}

.subtitleFull {
    display: none;
    font-size: 13pt;
}
/* school class hover transition properties */

.schoolContainer { /* this container allows the .schoolClass to pop out of the element without breaking the grid */
    transition: var(--longTransition);
    transition-property: box-shadow, background;
    margin: 0 2px;
    overflow: hidden;
    min-height: 80px;
    width: 400px;
    filter: none !important; /* the filter none !important overrides the animation causing the bounding box for hovers */
}
    /* The trio of selectors allows for a combination of tapping on mobile and mouseover */
    .schoolContainer:hover,
    .schoolContainer:focus,
    .schoolContainer:active {
        background: radial-gradient(ellipse at center, var(--myCream) 60%, white);
        box-shadow: 0px 0px 2px 1px var(--myGrey);
        border-radius: 4px;
        transform: none;
        filter: none;
        transition: var(--quickTransition);
        transition-property: box-shadow, background;
        transition-delay: 0s !important;
    }

        .schoolContainer:hover > .schoolClass,
        .schoolContainer:focus > .schoolClass,
        .schoolContainer:active > .schoolClass {
            position: fixed;
            inset: 50px 1rem auto 1rem;
            box-shadow: 0px 0px 2px 1px var(--myGoldenYellow);
            border-radius: 4px;
            background-color: var(--myCream);
            transition: var(--medTransition);
            transition-timing-function: cubic-bezier(0.4, 0, 0.5, 1.0);
            transition-property: background-color, inset;
            animation-duration: 0.5s;
            animation-name: blurOut;
            z-index: 2;
        }


            .schoolContainer:hover > .schoolClass > p,
            .schoolContainer:focus > .schoolClass > p,
            .schoolContainer:active > .schoolClass > p {
                font-size: 14pt; 
                transition: var(--medTransition);
                transition-timing-function: cubic-bezier(0.8, 0, 0, 1.0);
                transition-property: font-size;
            }
            /* hidden until the element is triggered */

            .schoolContainer:hover > .schoolClass > .subtitleAbbreviated,
            .schoolContainer:focus > .schoolClass > .subtitleAbbreviated,
            .schoolContainer:active > .schoolClass > .subtitleAbbreviated {
                display: none;
            }
            /* hidden when the element is triggered */

            .schoolContainer:hover > .schoolClass > .subtitleFull,
            .schoolContainer:focus > .schoolClass > .subtitleFull,
            .schoolContainer:active > .schoolClass > .subtitleFull {
                display: inline;
            }

            /* this selector is just to fix a bug related to the whitespace property when hovering */
            .schoolContainer:hover > .schoolClass > .skillsElement,
            .schoolContainer:focus > .schoolClass > .skillsElement,
            .schoolContainer:active > .schoolClass > .skillsElement {
                white-space: unset !important;
            }
/* hidden until the element is triggered */

@keyframes blurOut {
    from {
        filter: blur(2px);
    }

    90% {
        filter: blur(0);
    }

    to {
        filter: none;
    }
}


@media only screen and (min-width: 600px) {
    .schoolContainer:hover > .schoolClass,
    .schoolContainer:focus > .schoolClass,
    .schoolContainer:active > .schoolClass {
        inset: 160px 30vw auto 30vw;
    }
}

.singleClass {
    box-shadow: 0px 0px 2px 1px var(--myGrey);
    border-radius: 4px;
    margin: 0.5rem 1rem;
    padding: 0 1rem;
}

    .singleClass p {
        color: var(--myOffBlack);
        font-family: var(--bodyFont);
    }

@media only screen and (min-width: 600px) {
    .singleClass {
        width: max(70%, 500px);
    }

        .singleClass p {
            font-size: 18pt;
        }
}

.skillsElement { /* Giving the skillset it's own color and boldface */
    display: block;
    position: relative;
    color: var(--myDarkerBurgundy) !important; /* the !important tags keep the schoolclass selectors from fighting it */
    font-weight: 700;
    white-space: nowrap;
    font-size: 14pt !important;
    bottom: 0;
    float: none !important;
    text-align: left !important;
}
/* showcase properties */
#showcase {
    position: fixed;
    border-radius: 3px;
    z-index: 1;
    inset: 3rem 1rem auto 1rem;
    transition: var(--medTransition);
    transition-property: inset;
}

@media only screen and (min-width: 800px) {
    #showcase {
        inset: 3rem 20vw auto 20vw;
    }
}

.mask {
    position: fixed;
    inset: 0 0 0 0;
    background-color: white;
    z-index: -1;
    opacity: 0.5;
    transition: var(--medTransition);
    transition-property: opacity;
}

#showcaseContent {
    z-index: 1;
    background-color: var(--myCream);
    box-shadow: 0px 0px 2px 1px var(--myGoldenYellow);
    padding: 1em;
    max-height: 80vh;
    color: var(--myOffBlack);
}

    #showcaseContent p {
        font-family: var(--bodyFont);
        font-size: 14pt;
    }

    #showcaseContent h2 {
        font-size: 13pt;
    }
    #showcaseContent img {
        object-fit: cover;
    }

.closeButton {
    position: absolute;
    inset: 0 1rem auto auto;
    z-index: 2;
}

/* search button animations */
.inactive {
    display: inline;
    color: white;
    opacity: 0;
    margin: 0.5rem 0.5rem 0.5rem 0.5rem;
    padding: 0 0.5rem;
    transform: scale(2);
    transition: var(--quickTransition);
    transition-property: transform, opacity, color;
}

.noResults { /* not used right now */
    display: inline;
    margin: 0.5rem 0.5rem 0.5rem 3rem;
    padding: 0 0.5rem;
    line-height: 50%;
    transform: scale(2);
    color: var(--myBurgundy);
    transition: var(--quickTransition);
    background-color: none;
}
    .noResults::after {
        display: inline;
        content: 'No Results';
        font-family: var(--bodyFont);
        font-size: 12px;
        margin: 0.5rem 0.5rem 0.5rem 0.5rem;
    }
    .noResults:hover {
        background-color: unset;

    }

.graphicButton {
    display: inline;
    opacity: 1;
    margin: 0.5rem 0.5rem 0.5rem 0.5rem;
    padding: 0 0.5rem;
    color: white;
    background-image: linear-gradient(to bottom, var(--myBurgundy), var(--myDarkerBurgundy));
    border-radius: 2px 5px;
    filter: hue-rotate(0);
    transform: scale(1.1);
    transition: var(--quickTransition);
    transition-property: transform, filter, opacity;
}

    .graphicButton:active,
    .noResults:active{
        transform: scale(0.9);
    }

.resultButton {
    filter: hue-rotate(180deg) brightness(1.5);
    transition-property: transform, filter;
}

/* search field styling */
input {
    display: inline;
    border: none;
    border-left-color: var(--myDarkerBurgundy);
    border-right-color: var(--myDarkerBurgundy);
    border-radius: 4px;
    background-color: antiquewhite;
    font-size: 14pt;
    font-family: var(--bodyFont);
    padding: 0 0 0 1em;
    margin-left: 3rem;
    transition: var(--medTransition);
    transition-property: background-color, outline, box-shadow;
    line-height: 60%;
}

    input:focus {
        outline: none;
        background-color: unset;
        box-shadow: var(--myGoldenYellow) 0px 0px 2px 1px inset, var(--myCream) 0px 0px 10px 12px inset;
        transition-property: background-color, outline, box-shadow;
    }

/* legend styling for diagrams */
.legendBox{
    border-color: black;
    border-width: 1px;
    border-style: solid;
    border-radius: 4px;
    margin: 0 3px;
}

/* img styling */
.techLogo{
    float: left;
}
.sample{
    max-width:100%;
}
.sample:active, .sample:focus{
    max-width: unset;
    position: fixed;
    inset: 4rem auto auto auto;
    background-color: var(--myCream);
    transition: var(--medtransition);
    transition-property: inset, background-color;
}